{"version":3,"sources":["jQuery.ellipsis.js"],"names":["a","define","amd","jQuery","d","c","b","e","lines","ellipClass","responsive","h","q","p","w","g","k","i","text","m","x","$cont","empty","opts","append","$el","addClass","ellipLineClass","n","height","s","trim","split","html","join","find","each","push","f","j","extend","y","A","z","position","top","length","l","setTimeout","t","fn","window","this","data","console","error"],"mappings":"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","file":"jQuery.ellipsis.js","sourcesContent":["/*!\n * jQuery.ellipsis\n * https://github.com/jjenzz/jquery.ellipsis\n * --------------------------------------------------------------------------\n * Copyright (c) 2013 J. Smith (@jjenzz)\n * Dual licensed under the MIT and GPL licenses:\n * https://www.opensource.org/licenses/mit-license.php\n * http://www.gnu.org/licenses/gpl.html\n *\n * adds a class to the last 'allowed' line of text so you can apply\n * text-overflow: ellipsis;\n */\n(function (a) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"jquery\"], a);\n  } else {\n    a(jQuery);\n  }\n})(function (d) {\n  var c = \"ellipsis\",\n    b = '<span style=\"white-space: nowrap;\">',\n    e = { lines: \"auto\", ellipClass: \"ellip\", responsive: false };\n  function a(h, q) {\n    var m = this,\n      w = 0,\n      g = [],\n      k,\n      p,\n      i,\n      f,\n      j,\n      n,\n      s;\n    m.$cont = d(h);\n    m.opts = d.extend({}, e, q);\n    function o() {\n      m.text = m.$cont.text();\n      m.opts.ellipLineClass = m.opts.ellipClass + \"-line\";\n      m.$el = d('<span class=\"' + m.opts.ellipClass + '\" />');\n      m.$el.text(m.text);\n      m.$cont.empty().append(m.$el);\n      t();\n    }\n    function t() {\n      if (typeof m.opts.lines === \"number\" && m.opts.lines < 2) {\n        m.$el.addClass(m.opts.ellipLineClass);\n        return;\n      }\n      n = m.$cont.height();\n      if (m.opts.lines === \"auto\" && m.$el.prop(\"scrollHeight\") <= n) {\n        return;\n      }\n      if (!k) {\n        return;\n      }\n      s = d.trim(m.text).split(/\\s+/);\n      m.$el.html(b + s.join(\"</span> \" + b) + \"</span>\");\n      m.$el.find(\"span\").each(k);\n      if (p != null) {\n        u(p);\n      }\n    }\n    function u(x) {\n      s[x] = '<span class=\"' + m.opts.ellipLineClass + '\">' + s[x];\n      s.push(\"</span>\");\n      m.$el.html(s.join(\" \"));\n    }\n    if (m.opts.lines === \"auto\") {\n      var r = function (y, A) {\n        var x = d(A),\n          z = x.position().top;\n        j = j || x.height();\n        if (z === f) {\n          g[w].push(x);\n        } else {\n          f = z;\n          w += 1;\n          g[w] = [x];\n        }\n        if (z + j > n) {\n          p = y - g[w - 1].length;\n          return false;\n        }\n      };\n      k = r;\n    }\n    if (typeof m.opts.lines === \"number\" && m.opts.lines > 1) {\n      var l = function (y, A) {\n        var x = d(A),\n          z = x.position().top;\n        if (z !== f) {\n          f = z;\n          w += 1;\n        }\n        if (w === m.opts.lines) {\n          p = y;\n          return false;\n        }\n      };\n      k = l;\n    }\n    if (m.opts.responsive) {\n      var v = function () {\n        g = [];\n        w = 0;\n        f = null;\n        p = null;\n        m.$el.html(m.text);\n        clearTimeout(i);\n        i = setTimeout(t, 100);\n      };\n      d(window).on(\"resize.\" + c, v);\n    }\n    o();\n  }\n  d.fn[c] = function (f) {\n    return this.each(function () {\n      try {\n        d(this).data(c, new a(this, f));\n      } catch (g) {\n        if (window.console) {\n          console.error(c + \": \" + g);\n        }\n      }\n    });\n  };\n});\n"]}